'use strict';
var _ = require('lodash');
var moment = require('moment');

function t(name, attributes, content) {
  var attrStr = _.map(attributes, function(val, key) {
    return key + '=' + '"' + val + '"';
  }).join(' ');

  if(_.isArray(content)) {
    content = content.join('');
  }

  return '<' + name + ' ' + attrStr + '>' + content + '</' + name + '>';
};

function escapeHTML (input) {
  return input.replace(/&/g, '&amp;')
           .replace(/</g, '&lt;')
           .replace(/>/g, '&gt;')
           .replace(/"/g, '&quot;')
           .replace(/'/g, '&apos;');
}

module.exports = function() {
  return {
    headContent: function(options) {
      var React = require('react');
      return React.createClass({
        render: function () {
          return React.createElement('link', {
              rel: 'alternate',
              key: 'rss-theme-link',
              type: 'application/atom+xml',
              title: options.name,
              href: '/atom.xml'
            });
        }
      });
    },
    extra: function(paths, config) {
      var fileContent = t('feed', {xmlns: 'http://www.w3.org/2005/Atom'}, [
        t('title', {}, escapeHTML(config.name)),
        t('link', {href: config.baseUrl + 'atom.xml', rel: 'self'}, ' '),
        t('link', {href: config.baseUrl}, ' '),
        t('updated', {}, moment().format()),
        t('id', {}, config.baseUrl),
        t('author', {}, [
          t('name', {}, config.author ? escapeHTML(config.author.name || config.author) : ''),
          t('email', {}, config.author ? config.author.email : ''),
          ]),
        _.map(paths.items, function(item, name) {
          if(!item.title) {
            return;
          }

          return t('entry', {}, [
            t('title', {}, escapeHTML(item.title)),
            t('id', {},'a' +  _.camelCase(_.escape(_.deburr(item.title))).toLowerCase() + moment(item.date, 'YYYY-MM-DD').format().toLowerCase() ),
            t('link', {href: config.baseUrl + name}, ''),
              t('updated', {}, moment(item.date, 'YYYY-MM-DD').format()),
              t('content', {type: 'html'}, escapeHTML(item.content)),
              ]);
        }).filter(_.identity).join('')
      ]);
      return {'atom.xml': fileContent};
    }
  };
};
